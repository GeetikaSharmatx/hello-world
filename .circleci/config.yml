version: 2.1
orbs:
  aws-eks: circleci/aws-eks@0.2.7
  kubernetes: circleci/kubernetes@0.4.0
  slack: circleci/slack@3.4.2
jobs:
  build_test_push:
    docker:
    - image: circleci/node:10.9
    environment:
    # - SHORT_SHA: $(echo $CIRCLE_SHA1 | cut -b1-7)
    - TAG_NAME: "branch-$CIRCLE_BRANCH"
    - IMAGE_PATH: "geetikasharma7/hello-world"
    # - KC_ADMIN_USERNAME: "circleci"
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        name: Build Docker Image
        command: 'docker build -t $IMAGE_PATH:$CIRCLE_BUILD_NUM .'
    - run:
        name: Push Docker Image
        command: 'if  [ "$CIRCLE_BRANCH" == "development" ] ||  [ "$CIRCLE_BRANCH" == "master" ] || [ "$CIRCLE_BRANCH" == "production" ] ; then  bash ~/project/.circleci/deploy.sh; fi'
  deploy:
    docker: 
    - image: circleci/python:3.7
    steps: 
    - run: 
        name: Setup the environment and deploy to kubernetes
        command: |
            if [ "$CIRCLE_BRANCH" == "master" ]
            then 
              echo "Installing awscli"
              sudo pip3 install awscli
    
              echo "Upgrade AWS cli"
              sudo pip3 install --upgrade awscli
    
              echo "Install and configure kubectl"
              curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
              chmod +x ./kubectl
              sudo mv ./kubectl /usr/local/bin/kubectl
    
              echo "Install and confgure kubectl aws-iam-authenticator"
              curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
              chmod +x ./aws-iam-authenticator
              sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
    
              echo "Set kubernetes cluster variables w.r.t branch"
              export AWS_REGION="us-east-2"
              export EKS_CLUSTER_NAME="testCircleCi"
              export DEPLOYMENT="helloworld-deployment"
              export CONTAINER="helloworld"
              export DOCKERHUB_ACCOUNT_NAME="geetikasharma7"
              export REPOSITORY_NAME="hello-world"
        
              aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME} --region ${AWS_REGION} --alias ${EKS_CLUSTER_NAME}
              kubectl set image deployment/${DEPLOYMENT} ${CONTAINER}=${DOCKERHUB_ACCOUNT_NAME}/${REPOSITORY_NAME}:${CIRCLE_BRANCH}_${CIRCLE_PREVIOUS_BUILD_NUM}
            else
              echo "No Deployment"
            fi
    - slack/status:
        channel: C011D4UUJH5
        include_project_field: true
        only_for_branches: master
        success_message: ':tada: ${CIRCLE_BRANCH} branch is successfully deployed'
    
workflows:
  version: 2
  deployment:
    jobs:
      - build_test_push
      - deploy:
          requires:
             - build_test_push
